SELECT sysdate FROM dual;
--- 사원 : 사원ID, 폰번호, 이름, 나이, 성별, 주소, 부서, 직책, 연봉, 입사일, 퇴사일
--- 부서 : 부서ID, 부서명, 상위부서, 생성일, 부서장

--1. 사원(EMPLOYEES) 테이블 생성
CREATE TABLE EMPLOYEES(
	ID VARCHAR2(10),
	PHONE VARCHAR2(20),
	NAME VARCHAR2(20) NOT NULL,
	AGE NUMBER(3) NOT NULL,
	GENDER VARCHAR2(3) NOT NULL,
	ADDRESS VARCHAR2(200),
	DEPT_ID NUMBER(3),
	POSITION VARCHAR2(20),
	SALARY NUMBER(5),
	ENTRY_DATE VARCHAR2(20),
	RESIGN_DATE VARCHAR2(20),
	CONSTRAINT pkAsEmpID PRIMARY KEY(ID),
	CONSTRAINT foreignDeptId FOREIGN KEY(DEPT_ID) REFERENCES DEPARTMENTS(ID)
);


--2. 부서(DEPARTMENTS) 테이블 생성
CREATE TABLE DEPARTMENTS(
	ID NUMBER(3),
	NAME VARCHAR2(20) NOT NULL,
	UPPER_DEPT_ID NUMBER(3),
	CREATED_DATE VARCHAR2(20),
	DEPT_HEAD_ID VARCHAR2(20),
	CONSTRAINT pkAsDeptID PRIMARY KEY(ID)
);

DELETE FROM EMPLOYEES e ;
--3. 샘플 사원 데이터 INSERT
INSERT INTO EMPLOYEES
VALUES ('00000001',	'010-2082-1758',	'오형수',	30,	'남',	'서울시',	001,	'과장',	8469,	'2022-01-01',	null);
INSERT INTO EMPLOYEES
VALUES ('00000002',	'010-4776-0127',	'제갈성옥',	22,	'남',	'서울시',	001,	'사원',	3412,	'2020-03-03',	'2021-03-03');
INSERT INTO EMPLOYEES
VALUES ('00000003',	'010-2045-2314',	'고성훈',	20,	'남',	'서울시',	002,	'사원',	3074,	'2020-03-03',	null);
INSERT INTO EMPLOYEES
VALUES ('00000004',	'010-5424-8467',	'고은옥',	31,	'여',	'강원도',	003,	'사원',	3719,	'2022-01-01',	null);
INSERT INTO EMPLOYEES
VALUES ('00000005',	'010-8861-3236',	'정희아',	38,	'여',	'강원도',	004,	'부장',	5848,	'2022-01-01',	null);
INSERT INTO EMPLOYEES
VALUES ('00000006',	'010-4555-1632',	'황주희',	36,	'남',	'경기도',	001,	'차장',	4909,	'2022-01-01',	null);
INSERT INTO EMPLOYEES
VALUES ('00000007',	'010-5303-1108',	'복만호',	32,	'남',	'서울시',	001,	'차장',	4867,	'2022-01-01',	null);
INSERT INTO EMPLOYEES
VALUES ('00000008',	'010-8355-5100',	'신혜훈',	32,	'남',	'경기도',	002,	'대리',	3653,	'2020-03-03',	'2021-03-03');
INSERT INTO EMPLOYEES
VALUES ('00000009',	'010-1861-4130',	'예범준',	35,	'여',	'경기도',	003,	'대리',	4113,	'2022-01-01',	null);
INSERT INTO EMPLOYEES
VALUES ('00000010',	'010-6715-6538',	'최선미',	26,	'여',	'경상북도',	004,	'사원',	3623,	'2020-03-03',	null);
INSERT INTO EMPLOYEES
VALUES ('00000011',	'010-0874-4266',	'예효주',	26,	'남',	'서울시',	001,	'사원',	3230,	'2020-03-03',	null);
INSERT INTO EMPLOYEES
VALUES ('00000012',	'010-8620-5603',	'홍상수',	28,	'남',	'서울시',	001,	'대리',	3826,	'2020-03-03',	null);
INSERT INTO EMPLOYEES
VALUES ('00000013',	'010-4531-8274',	'조소빈',	38,	'남',	'서울시',	002,	'과장',	4232,	'2017-07-07',	null);
INSERT INTO EMPLOYEES
VALUES ('00000014',	'010-8063-0313',	'윤민욱',	22,	'여',	'경기도',	003,	'사원',	3317,	'2022-01-01',	null);
INSERT INTO EMPLOYEES
VALUES ('00000015',	'010-8655-2558',	'안종수',	56,	'여',	'경기도',	004,	'이사',	7447,	'2015-05-07',	null);
INSERT INTO EMPLOYEES
VALUES ('00000016',	'010-2026-8330',	'풍다희',	37,	'남',	'서울시',	001,	'사원',	3309,	'2015-05-07',	'2021-03-03');
INSERT INTO EMPLOYEES
VALUES ('00000017',	'010-6601-1106',	'노남일',	41,	'남',	'서울시',	001,	'부장',	5620,	'2015-05-07',	null);
INSERT INTO EMPLOYEES
VALUES ('00000018',	'010-1243-5364',	'풍희호',	52,	'남',	'서울시',	002,	'이사',	9924,	'2015-05-07',	null);
INSERT INTO EMPLOYEES
VALUES ('00000019',	'010-4817-1308',	'김세웅',	30,	'여',	'서울시',	003,	'사원',	3505,	'2019-03-19',	null);
INSERT INTO EMPLOYEES
VALUES ('00000020',	'010-0487-0155',	'탁성민',	32,	'여',	'강원도',	004,	'사원',	4391,	'2019-03-19',	'2022-04-01');
INSERT INTO EMPLOYEES
VALUES ('00000021',	'010-5652-2016',	'오효주',	51,	'남',	'강원도',	001,	'부장',	5609,	'2017-07-07',	null);
INSERT INTO EMPLOYEES
VALUES ('00000022',	'010-6748-0138',	'임수연',	29,	'남',	'경기도',	001,	'사원',	3623,	'2019-03-19',	null);
INSERT INTO EMPLOYEES
VALUES ('00000023',	'010-2610-2582',	'오은자',	32,	'남',	'경기도',	002,	'사원',	2932,	'2022-01-01',	null);
INSERT INTO EMPLOYEES
VALUES ('00000024',	'010-5115-2160',	'이광환',	23,	'여',	'충청북도',	003,	'사원',	3262,	'2022-01-01',	null);
INSERT INTO EMPLOYEES
VALUES ('00000025',	'010-6777-6324',	'노지우',	59,	'여',	'서울시',	004,	'이사',	7139,	'2017-07-07',	null);
INSERT INTO EMPLOYEES
VALUES ('00000026',	'010-6312-8177',	'안현수',	33,	'남',	'서울시',	001,	'사원',	3622,	'2022-01-01',	null);
INSERT INTO EMPLOYEES
VALUES ('00000027',	'010-1053-8530',	'남승식',	23,	'남',	'경상남도',	001,	'사원',	2886,	'2022-01-01',	'2022-04-01');
INSERT INTO EMPLOYEES
VALUES ('00000028',	'010-6261-7445',	'복민성',	46,	'남',	'전라북도',	002,	'부장',	5698,	'2019-03-19',	null);
INSERT INTO EMPLOYEES
VALUES ('00000029',	'010-1422-2417',	'전홍재',	59,	'남',	'전라남도',	003,	'상무',	9338,	'2015-05-07',	null);
INSERT INTO EMPLOYEES
VALUES ('00000030',	'010-3527-3534',	'손시윤',	43,	'남',	'경기도',	005,	'부장',	5598,	'2017-07-07',	null);
INSERT INTO EMPLOYEES
VALUES ('00000031',	'010-2242-4201',	'성상욱',	27,	'여',	'경기도',	001,	'사원',	4070,	'2022-01-01',	null);
INSERT INTO EMPLOYEES
VALUES ('00000032',	'010-3713-6051',	'복도하',	33,	'여',	'서울시',	002,	'사원',	2740,	'2022-01-01',	null);
INSERT INTO EMPLOYEES
VALUES ('00000033',	'010-8503-8545',	'예지연',	52,	'남',	'서울시',	003,	'사원',	3399,	'2019-03-19',	null);
INSERT INTO EMPLOYEES
VALUES ('00000034',	'010-7682-2551',	'정혜미',	45,	'남',	'서울시',	005,	'부장',	6369,	'2017-07-07',	'2022-04-01');
INSERT INTO EMPLOYEES
VALUES ('00000035',	'010-8185-8107',	'설남선',	42,	'남',	'서울시',	001,	'차장',	5325,	'2020-03-03',	null);
INSERT INTO EMPLOYEES
VALUES ('00000036',	'010-3074-3712',	'하재남',	43,	'여',	'강원도',	002,	'차장',	4589,	'2017-07-07',	null);
INSERT INTO EMPLOYEES
VALUES ('00000037',	'010-0087-4055',	'표동주',	40,	'여',	'강원도',	003,	'차장',	4456,	'2017-07-07',	null);
INSERT INTO EMPLOYEES
VALUES ('00000038',	'010-6837-3677',	'풍남준',	25,	'남',	'경기도',	001,	'사원',	3573,	'2022-01-01',	'2022-04-01');
INSERT INTO EMPLOYEES
VALUES ('00000039',	'010-1844-1026',	'복준성',	46,	'남',	'경기도',	005,	'차장',	4885,	'2017-07-07',	null);
INSERT INTO EMPLOYEES
VALUES ('00000040',	'010-4287-7020',	'박준현',	24,	'남',	'경기도',	003,	'사원',	3687,	'2022-01-01',	null)

--4. 직접 만든 부서 데이터 INSERT
INSERT INTO DEPARTMENTS
VALUES(1, '기획부', NULL, '2013-05-01', '00000017');
INSERT INTO DEPARTMENTS
VALUES(2, '인사부', NULL, '2013-05-01', '00000028');
INSERT INTO DEPARTMENTS
VALUES(3, '기획재정부', 1, '2015-05-01', NULL);
INSERT INTO DEPARTMENTS
VALUES(4, '감사부', NULL, '2015-05-07', '00000005');
INSERT INTO DEPARTMENTS
VALUES(5, '홍보부', NULL, '2015-03-11', '00000030');


--5. 서울시에 사는 직원들이 몇명인지 출력해보시오.
SELECT COUNT(*) FROM EMPLOYEES WHERE ADDRESS ='서울시';

--6. 직책이 '과장'인 사원들의 '평균 연봉'을 출력해보시오.
SELECT AVG(SALARY) FROM EMPLOYEES e WHERE POSITION ='과장';

--7. 근속년수가 5년이상인 사람중의 최저연봉자는 누구이며 얼마인지 출력해보시오.

SELECT TRUNC(SYSDATE - TO_DATE(ENTRY_DATE))  FROM EMPLOYEES e ;  2022-04-14 18:41:26.000    2022-01-01  103.783657407407407407407407407407407407
SELECT NAME, SALARY  FROM EMPLOYEES e WHERE TRUNC(SYSDATE - TO_DATE(ENTRY_DATE)) > 365*5 ;
SELECT NAME, SALARY  FROM EMPLOYEES e WHERE TRUNC(SYSDATE - TO_DATE(ENTRY_DATE)) > 365*5 ORDER BY SALARY;
SELECT NAME, MIN(SALARY)  FROM EMPLOYEES e GROUP BY NAME WHERE TRUNC(SYSDATE - TO_DATE(ENTRY_DATE)) > 365*5 ORDER BY SALARY;


SELECT NAME, SALARY FROM (SELECT NAME, SALARY  FROM EMPLOYEES e WHERE TRUNC(SYSDATE - TO_DATE(ENTRY_DATE)) > 365*5 ORDER BY SALARY) WHERE ROWNUM = 1;
--데이터타입이 VARCHAR2일때 최종결과. 
SELECT NAME, SALARY  FROM EMPLOYEES e WHERE TRUNC(SYSDATE - TO_DATE(ENTRY_DATE)) > 365*5 ORDER BY SALARY FETCH FIRST 1 ROWS ONLY;

--김현수. 데이터타입이 DATE이면 쉬운 방법.  5년이상의 연봉을 뽑아서 SELECT하는 방법
SELECT NAME, SALARY FROM EMPLOYEES
WHERE SALARY=(SELECT min(SALARY)  
FROM EMPLOYEES e 
WHERE TRUNC(MONTHS_BETWEEN(TO_DATE(RESIGN_DATE),TO_DATE(ENTRY_DATE) )/12,0)>=5);

--퇴사자중에 5년이상근무자 포함하면 결과 다름.


--8. 사원들의 부서별,나이대별(20대, 30대, 40대, 50대, 60대이상)로 사원수를 출력해보시오.
SELECT d.ID AS 부서아이디, 
	SUM(
		CASE WHEN AGE BETWEEN 20 AND 29 THEN 1 ELSE 0 END
	) AS "20대",
	SUM(
		CASE WHEN AGE BETWEEN 30 AND 39 THEN 1 ELSE 0 END
	) AS "30대",
	SUM(
		CASE WHEN AGE BETWEEN 40 AND 49 THEN 1 ELSE 0 END
	) AS "40대",
	SUM(
		CASE WHEN AGE BETWEEN 50 AND 59 THEN 1 ELSE 0 END
	) AS "50대",
	SUM(
		CASE WHEN AGE BETWEEN 60 AND 99 THEN 1 ELSE 0 END
	) AS "60대이상"
FROM EMPLOYEES e
JOIN DEPARTMENTS d 
ON d.ID = e.DEPT_ID 
GROUP BY d.ID ;




--9. '홍보부'보다 이전에 생성된 부서들의 이름을 보여주세요.
SELECT CREATED_DATE FROM DEPARTMENTS WHERE NAME = '홍보부';	--홍보부가 생성된 날짜
SELECT NAME FROM DEPARTMENTS WEHRE WHERE CREATED_DATE < 홍보부생성일;
SELECT NAME FROM DEPARTMENTS WEHRE WHERE CREATED_DATE < (SELECT CREATED_DATE FROM DEPARTMENTS WHERE NAME = '홍보부');

--10. 우리회사 최고 연봉자가 소속된 부서의 부서장의 이름을 보여주세요.
SELECT ID FROM EMPLOYEES WHERE SALARY = (SELECT MAX(SALARY) FROM EMPLOYEES e );--최고연봉자가 누구인지
--최고연봉자가 소속된 부서가 어디인지;
SELECT DEPT_ID  FROM EMPLOYEES  WHERE ID = (SELECT ID FROM EMPLOYEES WHERE SALARY = (SELECT MAX(SALARY) FROM EMPLOYEES e ));
--그 부서자의 부서장 출력
SELECT e.ID , e.NAME 
FROM EMPLOYEES e 
JOIN DEPARTMENTS d 
ON e.DEPT_ID =d.ID
AND e.ID = d.DEPT_HEAD_ID 
WHERE d.ID = (SELECT DEPT_ID  FROM EMPLOYEES  WHERE ID = (SELECT ID FROM EMPLOYEES WHERE SALARY = (SELECT MAX(SALARY) FROM EMPLOYEES e )));

--김현수
SELECT DISTINCT d.NAME ,d.DEPT_HEAD_ID  FROM EMPLOYEES e 
JOIN DEPARTMENTS d ON e.DEPT_ID =d.ID 
WHERE e.DEPT_ID =
(SELECT DEPT_ID  FROM EMPLOYEES e2  WHERE SALARY =
	(SELECT MAX(SALARY) FROM EMPLOYEES e3)
);


--11. 퇴사자들이 가장 많은 부서의 이름과 그 부서의 평균 연봉을 보여주세요.
-- 해당 부서의 평균 연봉
SELECT d.ID,avg(e.SALARY) 
FROM (
	SELECT ID, NAME --퇴사자수가 가장 많은 부서명
	  FROM DEPARTMENTS 	
	 WHERE ID = (  -- 퇴사가수가 가장 많은 부서ID를 조건으로 걸기
						SELECT DEPT_ID	--ID 만 단일행으로 가져오기
							FROM (	
								SELECT count(*) AS 퇴사자수,DEPT_ID -- 사원테이블에서 퇴사자수가 가장 많은 부서의 정보 가져오기
								FROM EMPLOYEES e2  WHERE RESIGN_DATE IS NOT NULL 
								GROUP BY DEPT_ID
								ORDER BY COUNT(*) DESC
								)
						WHERE ROWNUM<=1
				    )
	) d
JOIN EMPLOYEES e ON d.ID = e.DEPT_ID
GROUP BY d.id;

--12. 남직원과 여직원 사이의 연봉 격차가 얼마나 됩니까?
SELECT MAX(AVG(SALARY))-MIN(AVG(SALARY)) AS 연봉차이
FROM EMPLOYEES
GROUP BY GENDER ;


7,8,11은 틀려도 충분히 만점 가능.
남은중에 2개정도 반쯤 틀리면 합격

<문법 정리>
ORDER BY 이후에 하나만 뽑는거   FETCH FIRST 1 ROWS ONLY
조건에 따라 다른행동 하는거   CASE WHEN 컬럼명 조건 THEN 만족시행동 ELSE 불만족시할행동 END

