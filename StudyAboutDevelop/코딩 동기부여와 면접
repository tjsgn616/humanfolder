
코딩 동기부여
가능성, 자신감
공감대형성
흥미 기대
뚜렷한 목표
이해하기 쉽게 구조화
숫자3을 활용
프로젝트

- 10을 기준으로 비중 생각해보기.    수업, 독학, 학생들끼리
수업이 끝이라고 생각하는 학생의 비중 : 강의 8.5 , 독학 1, 학생들끼리0.5
	이러면 국비학원에서 찍어내는 수준 된다.
  이상적인 비중 : 강의 4, 독학 4, 학생들끼리 2
  "수업은 끝이 아니라 시작이다."

- 수업중 코드
  타자연습(단순 따라치기) 하지마라.
  끝나고 나면 소스 다 줄거고, 수업에는 온전히 이해하는데 집중.

- <오프라인>
  오프라인 참여. 집중력과 전달력이 50% 정도 차이난다.
  물리키보드를 쓰는것과 화면에서 가상키보드를 쓰는것의 차이정도.
  눈을 마주칠수 없다. 분위기를 느낄수 없다. 즉각적인 피드백이 안된다.
  학생들끼리의 커뮤니티 형성 불가.
  의지로 공부하면 오래 못간다. 환경을 바꿔야한다.
  예) 오늘 점심은 건강식으로 먹어야지.  주변에 건강식을 먹을수밖에 없도록 환경을 세팅.

- 마이크활용
- 서로 격려
- 어제한것복습(1,2시간), 오늘배울것 리스트 설명, 내일할일 설명(마칠때)
프로그래밍이라는 일이 얼마나 멋진 일인지, 얼마나 위한 일을 할수있는 일인지.
밑천도, 사무실도, 장비도 필요없다. 집에서 쓰던 컴퓨터로 엄청난 일을 할수있다.

택배를 시키고 기다리는 마음
내일은 무엇을 배울까?  이걸 배우면 어떤 일을 해낼수있을까?
그런 설레임이 들지 않는다면 지금 이 단원을 공부할때가 아니라는 말이다.
지식을 주입식으로 받지말고 주도적으로 받아야한다.
나의 문제와 결부되어야 한다.

- 피드백
메소드의 인자로 하나 넘기는 걸 못하는사람에게 10개넘기는걸 알려줘봤자 와닿지 못한다.
여러분들의 상태 파악이 너무너무 중요하다. 일방적인 강의가 되지 않기 위해서.
못했다면 못했다고 알려줘야 한다. 다음수업은 이전수업의 내용이 들어간다. 누적돼서 눈덩이처럼 커진다.
이제 질문을 안한다는것은 본질을 생각못하고 why를 모르고 how만 할줄아는것.
'이미 시간이 흘러서 수료는 하겠고 몰라도 나를 위해서 강의할 필요는 없다' 라고 받아들이고
질문하는학생들에게 기준을 맞춰서 진도나가겠다.

- 그날 모르는것은 그날 해결.

- 남은 3개월이 내 프로그래머의 첫시작을 좌우하고, 첫시작이 인생을 좌우한다.

- 프로젝트팀은 랜덤이 아니라 실력과 태도, 서로의 친밀도에 따라 매칭시킬것.
특히 마지막 프로젝트는 못따라가는 학생은 아예 팀프로젝트 못하게 하고 개인프로젝트로 뺄것.
다른 팀원들의 인생이 달려있다.

- 커리큘럼과 평가
단원의 학습목표는 무엇이고 이것을 배워서 어떤것을 할수있는지
평가도 형식적이 아니라 평가가 아니라 실전적인 평가


- 해야 하는 일(긴급함), 할 수 있는 일(뛰어남), 하고 싶은 일(간절함),
하고있는 일


- 대부분의 사람들은 해결할 수 없는 일.
그것을 어렵다고 표현한다.
만약 그 어려운일에서 성과를 내면 .. 차별성.
그 일을 계속해 나간다면 ... 위대함.
위대한 사람들이란 어려운 문제를 끊임없이 풀어 나가는 사람들.
내가 마주한 어려운 과제들을 어떻게 해결해 가는지. 과정과 결과.
난 절대로 이걸 이해할 수 없을거야. 절대로. 지금이라도 포기할까?
한번 시도나 해보자.
한달이 지나고 나니 아.. 뭔가 이해되는거 같은데?
두달이지나니 이것봐라.
세달이 지나니. 이것봐라.
처음에 무슨말인지 하나도 모르던것들을 이해하고 남들이 못보는것을 보고, 남들이 생각하지 못하는것을 생각하는 희열.
가고자 하는 방향으로, 시간을 쏟으면 된다.
여러분들은 어떤 개발자가 되고싶은가요?










<<면접질문>>
리스트 vs 맵
get, post, put 차이점
list, map 차이점과 어떤걸 많이 사용해봤는지
스택,힙 차이점
ajax사용해봤는지
제네릭 설명
mvc패턴 설명
프로젝트에서 맡은 부분 설명
프로젝트에서 코드 공유하고 합칠 때 어떻게 했는지
